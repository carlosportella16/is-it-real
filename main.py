from model import Net
from predict import predict_image
import torch

def main():
    # Define the path to the saved model and the image to be predicted
    model_file = 'model.pth'
    image_path = './data/test.jpg'

    # Load the trained model
    # Initialize the model using the Net class from model.py
    model = Net()
    # Load the saved state dict into the model
    model.load_state_dict(torch.load(model_file))
    # Set the model to evaluation mode (this affects layers like dropout)
    model.eval()

    # Make a prediction on the specified image
    # Use the predict_image function from predict.py
    probability = predict_image(image_path, model)
    # Print the probability that the image is generated by AI
    print(f"Probability of being an AI-generated image: {probability:.2%}")

# Run the main function if the script is executed directly
if __name__ == '__main__':
    main()
